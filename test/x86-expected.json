[
    [
        "exploitable/tests/bin/testReturnAv.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Segmentation fault on program counter",
            "explanation": "The target tried to access data at an address that matches the program counter. This is likely due to the execution of a branch instruction (ex: 'call') with a bad argument, but it could also be due to execution continuing past the end of a memory region or another cause. Regardless this likely indicates that the program counter contents are tainted and can be controlled by an attacker.",
            "ranking": [
                3,
                22
            ],
            "short_desc": "SegFaultOnPc"
        }
    ],
    [
        "exploitable/tests/bin/testSegFaultOnPc.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Segmentation fault on program counter",
            "explanation": "The target tried to access data at an address that matches the program counter. This is likely due to the execution of a branch instruction (ex: 'call') with a bad argument, but it could also be due to execution continuing past the end of a memory region or another cause. Regardless this likely indicates that the program counter contents are tainted and can be controlled by an attacker.",
            "ranking": [
                3,
                22
            ],
            "short_desc": "SegFaultOnPc"
        }
    ],
    [
        "exploitable/tests/bin/testBranchAv.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Access violation during branch instruction",
            "explanation": "The target crashed on a branch instruction, which may indicate that the control flow is tainted.",
            "ranking": [
                4,
                22
            ],
            "short_desc": "BranchAv"
        }
    ],
    [
        "exploitable/tests/bin/testStackCodeExecution.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Executing from stack",
            "explanation": "The target stopped on an error while executing code within the process's stack region.",
            "ranking": [
                5,
                22
            ],
            "short_desc": "StackCodeExection"
        }
    ],
    [
        "exploitable/tests/bin/testPossibleStackCorruption.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Possible stack corruption",
            "explanation": "GDB generated an error while unwinding the stack and/or the stack contained return addresses that were not mapped in the inferior's process address space and/or the stack pointer is pointing to a location outside the default stack region. These conditions likely indicate stack corruption, which is generally considered exploitable.",
            "ranking": [
                7,
                22
            ],
            "short_desc": "PossibleStackCorruption"
        }
    ],
    [
        "exploitable/tests/bin/testStackBufferOverflow.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Stack buffer overflow",
            "explanation": "The target stopped while handling a signal that was generated by libc due to detection of a stack buffer overflow. Stack buffer overflows are generally considered exploitable.",
            "ranking": [
                6,
                22
            ],
            "short_desc": "StackBufferOverflow"
        }
    ],
    [
        "exploitable/tests/bin/testDestAv.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Access violation on destination operand",
            "explanation": "The target crashed on an access violation at an address matching the destination operand of the instruction. This likely indicates a write access violation, which means the attacker may control the write address and/or value.",
            "ranking": [
                8,
                22
            ],
            "short_desc": "DestAv"
        }
    ],
    [
        "exploitable/tests/bin/testBadInstruction.test",
        {
            "category": "EXPLOITABLE",
            "desc": "Bad instruction",
            "explanation": "The target tried to execute a malformed or privileged instruction. This may indicate that the control flow is tainted.",
            "ranking": [
                9,
                22
            ],
            "short_desc": "BadInstruction"
        }
    ],
    [
        "exploitable/tests/bin/testSegFaultOnPcNearNull.test",
        {
            "category": "PROBABLY_EXPLOITABLE",
            "desc": "Segmentation fault on program counter near NULL",
            "explanation": "The target tried to access data at an address that matches the program counter. This may indicate that the program counter contents are tainted, however, it may also indicate a simple NULL deference.",
            "ranking": [
                12,
                22
            ],
            "short_desc": "SegFaultOnPcNearNull"
        }
    ],
    [
        "exploitable/tests/bin/testBranchAvNearNull.test",
        {
            "category": "PROBABLY_EXPLOITABLE",
            "desc": "Access violation near NULL during branch instruction",
            "explanation": "The target crashed on a branch instruction, which may indicate that the control flow is tainted. However, there is a chance it could be a NULL dereference.",
            "ranking": [
                13,
                22
            ],
            "short_desc": "BranchAvNearNull"
        }
    ],
    [
        "exploitable/tests/bin/testBlockMoveAv.test",
        {
            "category": "PROBABLY_EXPLOITABLE",
            "desc": "Access violation during block move",
            "explanation": "The target crashed during a block move, which may indicate that the attacker can control a buffer overflow.",
            "ranking": [
                14,
                22
            ],
            "short_desc": "BlockMoveAv"
        }
    ],
    [
        "exploitable/tests/bin/testDestAvNearNull.test",
        {
            "category": "PROBABLY_EXPLOITABLE",
            "desc": "Access violation near NULL on destination operand",
            "explanation": "The target crashed on an access violation at an address matching the destination operand of the instruction. This likely indicates a write access violation, which means the attacker may control write address and/or value. However, it there is a chance it could be a NULL dereference.",
            "ranking": [
                15,
                22
            ],
            "short_desc": "DestAvNearNull"
        }
    ],
    [
        "exploitable/tests/bin/testSourceAvNearNull.test",
        {
            "category": "PROBABLY_NOT_EXPLOITABLE",
            "desc": "Access violation near NULL on source operand",
            "explanation": "The target crashed on an access violation at an address matching the source operand of the current instruction. This likely indicates a read access violation, which may mean the application crashed on a simple NULL dereference to data structure that has no immediate effect on control of the processor.",
            "ranking": [
                16,
                22
            ],
            "short_desc": "SourceAvNearNull"
        }
    ],
    [
        "exploitable/tests/bin/testFloatingPointException.test",
        {
            "category": "PROBABLY_NOT_EXPLOITABLE",
            "desc": "Floating point exception signal",
            "explanation": "The target crashed on a floating point exception. This may indicate a division by zero or a number of other floating point errors. It is generally difficult to leverage these types of errors to gain control of the processor.",
            "ranking": [
                17,
                22
            ],
            "short_desc": "FloatingPointException"
        }
    ],
    [
        "exploitable/tests/bin/testBenignSignal.test",
        {
            "category": "PROBABLY_NOT_EXPLOITABLE",
            "desc": "Benign signal",
            "explanation": "The target is stopped on a signal that either does not indicate an error or indicates an error that is generally not considered exploitable.",
            "ranking": [
                18,
                22
            ],
            "short_desc": "BenignSignal"
        }
    ],
    [
        "exploitable/tests/bin/testSourceAv.test",
        {
            "category": "UNKNOWN",
            "desc": "Access violation on source operand",
            "explanation": "The target crashed on an access violation at an address matching the source operand of the current instruction. This likely indicates a read access violation.",
            "ranking": [
                19,
                22
            ],
            "short_desc": "SourceAv"
        }
    ],
    [
        "exploitable/tests/bin/testAbortSignal.test",
        {
            "category": "UNKNOWN",
            "desc": "Abort signal",
            "explanation": "The target is stopped on a SIGABRT. SIGABRTs are often generated by libc and compiled check-code to indicate potentially exploitable conditions. Unfortunately this command does not yet further analyze these crashes.",
            "ranking": [
                20,
                22
            ],
            "short_desc": "AbortSignal"
        }
    ],
    [
        "exploitable/tests/bin/testHeapError.test",
        {
            "category": "UNKNOWN",
            "desc": "Abort signal",
            "explanation": "The target is stopped on a SIGABRT. SIGABRTs are often generated by libc and compiled check-code to indicate potentially exploitable conditions. Unfortunately this command does not yet further analyze these crashes.",
            "ranking": [
                20,
                22
            ],
            "short_desc": "AbortSignal"
        }
    ],
    [
        "exploitable/tests/bin/testUncategorizedSignal.test",
        {
            "category": "UNKNOWN",
            "desc": "Uncategorized signal",
            "explanation": "The target is stopped on a signal. This may be an exploitable condition, but this command was unable to categorize it.",
            "ranking": [
                22,
                22
            ],
            "short_desc": "UncategorizedSignal"
        }
    ]
]
